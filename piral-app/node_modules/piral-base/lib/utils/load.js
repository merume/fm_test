"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.loadFrom = void 0;
const helpers_1 = require("./helpers");
const dependency_1 = require("./dependency");
const depContext = {};
function loadSharedDependencies(dependencies) {
    if (dependencies) {
        const names = Object.keys(dependencies);
        return Promise.all(names.map((name) => {
            return depContext[name] || (depContext[name] = (0, dependency_1.includeScriptDependency)(dependencies[name]));
        }));
    }
    return (0, helpers_1.promisify)();
}
function handleFailure(error, name) {
    console.error('Failed to load pilet', name, error);
    return dependency_1.emptyApp;
}
/**
 * Loads a pilet from the specified metadata and loader function.
 * @param meta The metadata of the pilet.
 * @param link The link (URL) to the pilet's main script.
 * @param loadPilet The loader function derived for the pilet.
 * @returns The evaluated pilet, which can then be integrated.
 */
function loadFrom(meta, loadPilet) {
    return loadSharedDependencies(meta.dependencies)
        .then(loadPilet)
        .catch((error) => handleFailure(error, meta.name))
        .then((app) => (0, dependency_1.createEvaluatedPilet)(meta, app));
}
exports.loadFrom = loadFrom;
//# sourceMappingURL=load.js.map