import { inspectPilet } from './inspect';
/**
 * Sets up the evaluated pilets to become integrated pilets.
 * @param createApi The function to create an API object for a pilet.
 * @param pilets The available evaluated app pilets.
 * @param hooks The API hooks to apply.
 * @returns The integrated pilets.
 */
export function runPilets(createApi, pilets, hooks = {}) {
    const promises = [];
    if (Array.isArray(pilets)) {
        for (const pilet of pilets) {
            const [, , setupPilet] = inspectPilet(pilet);
            const wait = setupPilet(pilet, createApi, hooks);
            promises.push(wait);
        }
    }
    return Promise.all(promises).then(() => pilets);
}
/**
 * Sets up an evaluated pilet to become an integrated pilet.
 * @param createApi The function to create an API object for the pilet.
 * @param pilet The available evaluated pilet.
 * @param hooks The API hooks to apply.
 * @returns The integrated pilet.
 */
export function runPilet(createApi, pilet, hooks = {}) {
    const [, , setupPilet] = inspectPilet(pilet);
    const wait = setupPilet(pilet, createApi, hooks);
    return wait.then(() => pilet);
}
//# sourceMappingURL=aggregate.js.map