"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createNavigation = exports.createRedirect = exports.useCurrentNavigation = exports.useRouterContext = void 0;
const React = require("react");
//@ts-ignore
const react_router_1 = require("react-router");
let _nav;
const _noop = () => { };
function useRouterContext() {
    return React.useContext(react_router_1.UNSAFE_NavigationContext);
}
exports.useRouterContext = useRouterContext;
function useCurrentNavigation() {
    const ctx = useRouterContext();
    const location = (0, react_router_1.useLocation)();
    React.useEffect(() => {
        if (_nav) {
            window.dispatchEvent(new CustomEvent('piral-navigate', {
                detail: {
                    location,
                },
            }));
        }
    }, [location]);
    React.useEffect(() => {
        _nav = ctx.navigator;
        return () => {
            _nav = undefined;
        };
    }, []);
}
exports.useCurrentNavigation = useCurrentNavigation;
function createRedirect(to) {
    return () => React.createElement(react_router_1.Navigate, { to: to });
}
exports.createRedirect = createRedirect;
function createNavigation() {
    const enhance = (info) => (Object.assign(Object.assign({}, info), { location: Object.assign({ get href() {
                return _nav.createHref(info.location);
            } }, info.location) }));
    return {
        get path() {
            const loc = _nav ? _nav.location : location;
            return loc.pathname;
        },
        get url() {
            const loc = _nav ? _nav.location : location;
            return `${loc.pathname}${loc.search}${loc.hash}`;
        },
        push(target, state) {
            if (_nav) {
                _nav.push(target, state);
            }
        },
        replace(target, state) {
            if (_nav) {
                _nav.replace(target, state);
            }
        },
        go(n) {
            if (_nav) {
                _nav.go(n);
            }
        },
        block(blocker) {
            if (!_nav) {
                return _noop;
            }
            return _nav.block((transition) => blocker(enhance(transition)));
        },
        listen(listener) {
            const handler = (e) => listener(enhance(e.detail));
            window.addEventListener('piral-navigate', handler);
            return () => {
                window.removeEventListener('piral-navigate', handler);
            };
        },
        get router() {
            return _nav;
        },
    };
}
exports.createNavigation = createNavigation;
//# sourceMappingURL=navigator_v6.js.map