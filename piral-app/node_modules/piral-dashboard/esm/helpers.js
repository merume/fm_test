import { DefaultTile, DefaultContainer } from './default';
import { Dashboard } from './Dashboard';
export function getPreferences(defaultPreferences, customPreferences = {}) {
    return Object.assign(Object.assign({}, defaultPreferences), customPreferences);
}
export function getTiles(items, defaultPreferences) {
    const tiles = {};
    let i = 0;
    for (const { component, preferences } of items) {
        tiles[`global-${i++}`] = {
            pilet: undefined,
            component,
            preferences: getPreferences(defaultPreferences, preferences),
        };
    }
    return tiles;
}
export function withTiles(tiles) {
    return (state) => (Object.assign(Object.assign({}, state), { components: Object.assign({ DashboardTile: DefaultTile, DashboardContainer: DefaultContainer }, state.components), registry: Object.assign(Object.assign({}, state.registry), { tiles }) }));
}
export function withRoutes(routes) {
    return (state) => (Object.assign(Object.assign({}, state), { routes: Object.assign(Object.assign({}, state.routes), routes.reduce((newRoutes, route) => {
            newRoutes[route] = Dashboard;
            return newRoutes;
        }, {})) }));
}
//# sourceMappingURL=helpers.js.map