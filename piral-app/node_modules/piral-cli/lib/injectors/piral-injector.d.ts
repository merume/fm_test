/// <reference types="node" />
/// <reference types="node" />
import { EventEmitter } from 'events';
import { KrasInjector, KrasResponse, KrasRequest, KrasInjectorConfig, KrasConfiguration } from 'kras';
import { Bundler } from '../types';
export interface PiralInjectorConfig extends KrasInjectorConfig {
    bundler: Bundler;
    publicUrl: string;
    feed?: string;
    headers?: Record<string, string>;
}
export default class PiralInjector implements KrasInjector {
    config: PiralInjectorConfig;
    constructor(options: PiralInjectorConfig, _config: KrasConfiguration, core: EventEmitter);
    get active(): boolean;
    set active(value: boolean);
    get name(): string;
    getOptions(): {};
    setOptions(): void;
    sendContent(content: Buffer | string, type: string, url: string): KrasResponse;
    sendIndexFile(target: string, url: string): KrasResponse;
    sendResponse(path: string, target: string, dir: string, url: string, recursionDepth?: number): KrasResponse;
    handle(req: KrasRequest): KrasResponse;
}
